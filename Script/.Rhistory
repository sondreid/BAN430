na.omit()
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_men",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
df  %>%
mutate(date = as.Date(Date))
### Libraries ----
library(fpp3)
library(readxl)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
column.names <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 1)  %>%
na.omit()
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_men",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
df  %>%
mutate(date = as.Date(date))  %>%
filter(year(Date) >= 1995)
df
colanmes(df)
colnames(df)
colnames(df) %>% unique()
diff(colnames(df) %>% unique(), colnames(df))
setdiff(colnames(df) %>% unique() - colnames(df))
setdiff(colnames(df) %>% unique(), colnames(df))
setdiff(c(colnames(df) %>% unique()), c(colnames(df))
)
### Libraries ----
library(fpp3)
library(readxl)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
column.names <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 1)  %>%
na.omit()
clear_names <- c(   "month",
"seasonal_unemp_men",
"seasonal_unemp_women",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
df  %>%
mutate(date = as.Date(date))  %>%
filter(year(date) >= 1995)
df
### Libraries ----
library(fpp3)
library(readxl)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
column.names <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 1)  %>%
na.omit()
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_women",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
unemployment <- df  %>%
mutate(date = as.Date(date))  %>%
filter(year(date) >= 1995)   %>%
select(date, unemp_level)  %>%
tsibble()
unemployment_seasonaladj <- df  %>%
mutate(date = as.Date(date))  %>%
filter(year(date) >= 1995)   %>%
select(date, unemp_level)  %>%
tsibble()
unemployment  %>%
autoplot()
for (i in 1:nrow(column.names)){
if (column.names[[1]][i] == "Series ID:"){
print(column.names[[1]][i+3])
clear_names <- c(clear_names, column.names[[1]][i+3])
}
}
### Libraries ----
library(fpp3)
library(readxl)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
column.names <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 1)  %>%
na.omit()
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_women",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
unemployment <- df  %>%
mutate(date = as.Date(date))  %>%
filter(year(date) >= 1995)   %>%
select(date, unemp_level)  %>%
tsibble()
unemployment_seasonaladj <- df  %>%
mutate(date = as.Date(date))  %>%
filter(year(date) >= 1995)   %>%
select(date, seasonal_unemp_level)  %>%
tsibble()
unemployment  %>%
autoplot(col = "blue") +
autolayer(unemployment_seasonaladj, col = "red") +
theme_classic() +
labs(   title = "Unemployment in USA",
subtitle = "Seasonal adj. vs non adj.",
y = "Unemployment level",
x = "Months") +
guides(col = guide_legend(title = "Series"))
unemployment %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level)) +
geom_line(aes(x = date, y = unemployment_seasonaladj), data = unemployment_seasonaladj)
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line() +
geom_line(aes(x = date, y = unemployment_seasonaladj), data = unemployment_seasonaladj)
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line() +
geom_line(mapping = aes(x = date, y = unemployment_seasonaladj), data = unemployment_seasonaladj)
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line() +
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line()
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line() +
geom_line(mapping = aes(x = date, y = unemployment_seasonaladj), data = unemployment_seasonaladj)
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line()
unemployment %>%
ggplot(aes(x = date, y = unemp_level)) +
geom_line() +
geom_line(mapping = aes(x = date, y = unemployment_seasonaladj), data = unemployment_seasonaladj)
unemployment %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level)) +
geom_line(mapping = aes(x = date, y = unemployment_seasonaladj), data = unemployment_seasonaladj)
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "red")) +
geom_line(aes(x = date, y = unemployment_seasonaladj, col = "blue"))
rlang::last_error()
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_smooth(aes(x = date, y = unemp_level, col = "red"))
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_smooth(aes(x = date, y = unemp_level, col = "red")) +
geom_smooth(aes(x = date, y = unemployment_seasonaladj, col = "blue"))
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "red"))
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "Unadjusted seasonal")) +
geom_line(aes(x = date, y = seasonal_unemp_level, col = "Adjusted seasonal"))
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "Unadjusted seasonal")) +
geom_line(aes(x = date, y = seasonal_unemp_level, col = "Adjusted seasonal")) +
labs(   title = "Unemployment in USA",
subtitle = "Seasonal adj. vs non adj.",
y = "Unemployment level",
x = "Months") +
guides(colours = guide_legend(title = "Series:"))
df %>%
mutate(date = as.Date(date)) %>%
filter(year(date) >= 1995) %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "Unadjusted seasonal")) +
geom_line(aes(x = date, y = seasonal_unemp_level, col = "Adjusted seasonal")) +
labs(   title = "Unemployment in USA",
subtitle = "Seasonal adj. vs non adj.",
y = "Unemployment level",
x = "Months") +
guides(col = guide_legend(title = "Series:"))
unemployment <- df  %>%
mutate(date = as.Date(date))  %>%
filter(year(date) >= 1995)   %>%
select(date, unemp_level, seasonal_unemp_level)  %>%
tsibble()
unemployment %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "Unadjusted seasonal")) +
geom_line(aes(x = date, y = seasonal_unemp_level, col = "Adjusted seasonal")) +
labs(   title = "Unemployment in USA",
subtitle = "Seasonal adj. vs non adj.",
y = "Unemployment level",
x = "Months") +
guides(col = guide_legend(title = "Series:"))
unemployment  %>%
model("Additive" = ETS(unemp_level))
View(unemployment)
View(unemployment)
sapply(unemployment, class)
sapply(unemployment, class)
unemployment  %>%
model(additive = classical_decomposition(unemp_level, type = "additive"))
help(accuracy)
View(unemployment_seasonaladj)
length(unemployment$date %>% unique())
unemployment$date %>% unique()
df_ts <- ts(df)
df_ts %>% model(Mean = MEAN(unemp_level))
df_ts
df_ts %>% autoplot()
library(ggfortify)
df_ts %>% autoplot()¨'
df_ts %>% autoplot()¨
df_ts %>% autoplot()
help(model)
help(accuracy)
View(unemployment)
#setwd("G:/Dokumenter/Google drive folder/NHH/Master/BAN430/Repository/Script")
#setwd("/Users/olaiviken/Documents/BAN430/BAN430/Data")
### Libraries ----
library(fpp3)
library(readxl)
#library(doParallel)
library(lubridate)
library(magrittr)
library(feasts)
library(seasonal)
library(RJDemetra)
library(rJava)
#library(ggfortify)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_women",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
# unemployment %>%
#     ggplot() +
#     geom_line(aes(x = date, y = unemp_level, col = "Unadjusted seasonal")) +
#     geom_line(aes(x = date, y = seasonal_unemp_level, col = "Adjusted seasonal")) +
#     labs(   title = "Unemployment in USA",
#             subtitle = "Seasonal adj. vs non adj.",
#             y = "Unemployment level",
#             x = "Months") +
#     guides(col = guide_legend(title = "Series:"))
unemployment  %>%
model(classical_decomposition(unemp_level, type = "additive"))
unemployment <- df  %>%
mutate(date = yearmonth(date))  %>%
filter(year(date) >= 1995 & year(date) <= 2019)   %>%
select(date, unemp_level, seasonal_unemp_level)
unemployment_train <- unemployment  %>%
filter(year(date) <= 2018)  %>%
select(date, unemp_level, seasonal_unemp_level)
###### Summary statistics #########
### Mean, median etc.
unemployment_train  %>%
mutate(month = lubridate::month(date))  %>%
group_by(month)  %>%
summarise(  min = min(unemp_level),
"25%-percentil" = quantile(unemp_level, 0.25),
mean = mean(unemp_level),
median = median(unemp_level),
"75%-percentil" = quantile(unemp_level, 0.75),
max = max(unemp_level))
unemployment_train_ts <-  unemployment_train %>%
as_tsibble(index = date)
#Seasonal subseries
unemployment_train_ts  %>%
gg_subseries(unemp_level) +
labs(x = "Month", y = "Unemployment level")
# Train series
unemployment_train_ts   %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "Training data")) +
labs(   title = "Unemployment",
subtitle = "Train [1995-2018]",
y = "Unemployment level",
x = "Month") +
guides(col = FALSE)
# STL: X11
test <- ts(unemployment_train %>% select(date, unemp_level), start = c("1995"), frequency = 12)
x13_dcmp <- ts(unemployment_train %>% select(date, unemp_level)) %>% x13()
x13_mod <- x13(ts(unemployment_train %>% select(date, unemp_level), start = c("1995"), frequency = 12))
plot(x13_mod, type_chart = "sa-trend")
autoplot(x13_mod)
unemployment_train_ts  %>%  seas(x = unemp_level,
arima.model = "(1 1 1)(0 1 1)",
regression.aictest = NULL,
outlier = NULL,
transform.function = "none")
x11_dcmp <- unemployment_train_ts  %>%
model(x11 = feasts:::X11(unemp_level, type = "additive"))  %>%
components()
x11_dcmp  %>%
ggplot() +
geom_line(aes(x= date, y = season_adjust, col = "seasonal adjusted")) +
geom_line(aes(x= date, y = seasonal_unemp_level, col = "US labor statistics"), data = unemployment_train_ts)
seas(unemployment_train_ts,x = unemp_level,x11="")
### ETS model ###
#### ARIMA
View(x13_mod)
x13_mod$regarima
x13_mod$decomposition
x13_mod$decomposition[1]
x13_mod$decomposition[2]
x13_mod$decomposition[[1]]
plot(x13_mod$decomposition)
plot(x13_mod$decomposition[1])
plot(x13_mod)
plot(x13_mod)
test <- ts(unemployment_train %>% select(date, unemp_level), start = c("1995"), end = c("2019"), frequency = 12)
test
plot(x13_mod$decomposition[1])
x13_mod$final
x13_mod$user_defined
x13binary::checkX13binary()
x13binary::x13path()
x13binary::x13path("F:\x13binary\bin")
x13path("F:\x13binary\bin")
x13binary::x13path("F:/x13binary/bin")
plot(x13_mod)
test <- ts(unemployment_train %>% select(date, unemp_level), start = c("1995"), end = c("2019"), frequency = 1)
x13_mod <- x13(test)
x13_mod <- x13(test)
x13_mod <- x13(test)
test
test <- ts(unemployment_train %>% select(date, unemp_level), start = c("1995"), end = c("2019"), frequency = 12)
x13(test)
x13_mod$final
ts(df)
#setwd("G:/Dokumenter/Google drive folder/NHH/Master/BAN430/Repository/Script")
#setwd("/Users/olaiviken/Documents/BAN430/BAN430/Data")
### Libraries ----
library(fpp3)
library(readxl)
#library(doParallel)
library(lubridate)
library(magrittr)
library(feasts)
library(seasonal)
library(RJDemetra)
library(rJava)
library(ggfortify)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_women",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemp_level",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemp_level")
colnames(df) <- clear_names
# unemployment %>%
#     ggplot() +
#     geom_line(aes(x = date, y = unemp_level, col = "Unadjusted seasonal")) +
#     geom_line(aes(x = date, y = seasonal_unemp_level, col = "Adjusted seasonal")) +
#     labs(   title = "Unemployment in USA",
#             subtitle = "Seasonal adj. vs non adj.",
#             y = "Unemployment level",
#             x = "Months") +
#     guides(col = guide_legend(title = "Series:"))
unemployment  %>%
model(classical_decomposition(unemp_level, type = "additive"))
unemployment <- df  %>%
mutate(date = yearmonth(date))  %>%
filter(year(date) >= 1995 & year(date) <= 2019)   %>%
select(date, unemp_level, seasonal_unemp_level)
unemployment_train <- unemployment  %>%
filter(year(date) <= 2018)  %>%
select(date, unemp_level, seasonal_unemp_level)
###### Summary statistics #########
### Mean, median etc.
unemployment_train  %>%
mutate(month = lubridate::month(date))  %>%
group_by(month)  %>%
summarise(  min = min(unemp_level),
"25%-percentil" = quantile(unemp_level, 0.25),
mean = mean(unemp_level),
median = median(unemp_level),
"75%-percentil" = quantile(unemp_level, 0.75),
max = max(unemp_level))
unemployment_train_ts <-  unemployment_train %>%
as_tsibble(index = date)
#Seasonal subseries
unemployment_train_ts  %>%
gg_subseries(unemp_level) +
labs(x = "Month", y = "Unemployment level")
# Train series
unemployment_train_ts   %>%
ggplot() +
geom_line(aes(x = date, y = unemp_level, col = "Training data")) +
labs(   title = "Unemployment",
subtitle = "Train [1995-2018]",
y = "Unemployment level",
x = "Month") +
guides(col = FALSE)
## SEAS X13
library(x13binary)
Sys.setenv(X13_PATH = "F:/x13binary/bin")
checkX13()
test <- ts(unemployment_train %>% select(unemp_level), start = c("1995"), frequency = 12)
x_13_seas <- seas(test)
x13(test)
plot(x13(test))
setwd("G:/Dokumenter/Google drive folder/NHH/Master/BAN430/Repository/Script")
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
View(df)
df <- read_xls("../Data/US/Forecasting_economic_data.xls", sheet = 2)
clear_names <- c(   "date",
"seasonal_unemp_men",
"seasonal_unemp_women",
"seasonal_unemp_less_high_school",
"seasonal_unemp_high_school",
"seasonal_unemp_college",
"unemployed",
"unemp_men" ,
"unemp_women",
"unemp_less_high_school",
"unemp_high_school",
"unemp_college",
"seasonal_unemployed")
colnames(df) <- clear_names
View(df)
UseMethod(model())
library(fpp3)
UseMethod(model())
UseMethod(model)
methods(model())
methods(model)
model()
model
UseMethod("model")
rLess
LessR::model
library(lessR)
lessR::model()
lessR::model
model
feasts
library(feasts)
feasts::model
feasts::autolayer()
